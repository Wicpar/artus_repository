"""
repo.registerModule("artus.base");

// create a base context to catch non matched elements and report in the log without crashing
var error = repo.getMatcher("error") ?: repo.registerMatcher("error", ".");
var recoverableCtx = repo.registerContextType("artus.recoverable", [error], {error.type: "log('severe', `expected: ${type.matcherStackString()}; got: ${token.text}`)"})

// extend that context to ignore spaces, since we are not writing python. Don't forget unicode.
var space = repo.registerMatcher("artus.base.space", "[\p{Z}\r]+|\n");
var spaceableCtx = repo.registerContextType("spaceable", [space], null, recoverableCtx);

// extend that context to ignore spaces, since we are not writing python. Don't forget unicode.
var lineComment = repo.registerMatcher("artus.base.comment.line", "//.*?\n");
var blockComment = repo.registerMatcher("artus.base.comment.block", "/\*.*?\*/");
var commentableCtx = repo.registerContextType("artus.commentable", [blockComment, lineComment], null, spaceableCtx);

// create the main hook, to allow extension
var mainCtx = repo.preRegisterContextType("artus.main", commentableCtx);

"""